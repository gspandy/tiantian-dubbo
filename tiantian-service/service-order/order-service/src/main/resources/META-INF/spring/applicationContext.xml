<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- spring 核心配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- 允许JVM参数覆盖 -->
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<!-- 忽略没有找到的资源文件 -->
		<property name="ignoreResourceNotFound" value="true" />
		<!-- 配置资源文件 -->
		<property name="locations">
			<list>
				<value>classpath:props/dubbo.properties</value>
				<value>classpath:props/jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!-- 使用组件的自动扫描扫描 -->
	<context:component-scan base-package="com.tiantian.store.order" />


	<!-- 定义数据源，使用自己实现的数据源 -->
	<bean id="dataSource" class="com.tiantian.core.datasource.DynamicDataSource">
		<!-- 设置多个数据源 -->
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<!-- 这个key需要和程序中的key一致 -->
				<entry key="master" value-ref="masterDataSource" />
				<entry key="slave01" value-ref="slave01DataSource" />
				<entry key="slave02" value-ref="slave02DataSource" />
				<entry key="slave03" value-ref="slave03DataSource" />
			</map>
		</property>
		<!-- 设置默认的数据源，这里默认走写库 -->
		<property name="defaultTargetDataSource" ref="masterDataSource" />
	</bean>

	<!-- 扫描指定包下面的Mapper，并且自动注入到bean中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.tiantian.store.order.mapper" />
	</bean>


	<bean id="dozerMapper" class="org.dozer.DozerBeanMapper">
	</bean>

	<import resource="../../dubbo/dubbo-server.xml" />
</beans>